// Base schema.prisma (you'd have one version per store)
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "clefast"] // Just include the schema for this store
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

// Auth models in store-specific schema
model User {
  id                String    @id @default(cuid())
  name              String?
  email             String    @unique
  password          String?
  emailVerified     DateTime?
  image             String?
  role              Role      @default(user)
  
  // Additional optional user information
  firstName         String?
  lastName          String?
  phone             String?
  company           String?
  taxId             String?   // For tax identification (NIF/CIF)
  acceptsMarketing  Boolean   @default(false)
  
  accounts          Account[]
  addresses         Address[]

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@schema("clefast") // This would be different for each store
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@schema("clefast")
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
  @@schema("clefast")
}

// New model for user addresses
model Address {
  id              String    @id @default(cuid())
  userId          String
  isDefault       Boolean   @default(false)
  addressType     AddressType @default(both)
  
  // Address information
  address1        String
  address2        String?
  city            String
  province        String?   // State/Province
  zip             String
  country         String
  phone           String?
  company         String?
  
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@schema("clefast")
}

// Enum for address types
enum AddressType {
  shipping
  billing
  both

  @@schema("clefast")
}

enum Role {
  user
  admin

  @@schema("clefast")
}